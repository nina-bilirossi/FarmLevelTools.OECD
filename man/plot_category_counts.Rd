% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/barcharts.R
\name{plot_category_counts}
\alias{plot_category_counts}
\title{Plot Counts of Categorical Variables from Wide-Format Data}
\usage{
plot_category_counts(
  df_wide,
  id_col = NULL,
  title = "Category Counts",
  x_label = "Category",
  y_label = "Count",
  fill_color = "darkgreen",
  sort_descending = TRUE,
  show_counts = TRUE
)
}
\arguments{
\item{df_wide}{A data frame in wide format where columns represent categories
and rows represent observations. Values should be numeric (typically binary
0/1 indicators or counts).}

\item{id_col}{Character vector specifying the name(s) of identifier column(s)
to exclude from counting. If \code{NULL} (default), all columns will be
counted.}

\item{title}{Character string for the plot title. Default is "Category Counts".}

\item{x_label}{Character string for the x-axis label. Default is "Category".}

\item{y_label}{Character string for the y-axis label. Default is "Count".}

\item{fill_color}{Character string specifying the fill color for bars.
Default is "darkgreen". Can be any valid color name or hex code.}

\item{sort_descending}{Logical indicating whether to sort categories by count
in descending order. Default is \code{TRUE}.}

\item{show_counts}{Logical indicating whether to display count labels above
bars. Default is \code{TRUE}.}
}
\value{
A \code{ggplot2} object that can be further customized or displayed.
}
\description{
Creates a bar chart showing the sum of values for each categorical column in
a wide-format data frame. Useful for visualizing the distribution of binary
or count data across multiple categories.
}
\details{
This function is designed to work with wide-format data where each column
represents a categorical variable and contains numeric values (often binary
indicators). The function sums the values in each column and creates a bar
chart to visualize the distribution.

The resulting plot uses a minimal theme with rotated x-axis labels (45 degrees)
for better readability when category names are long.
}
\examples{
df_wide <- disaggregate_target(database, "Main.target.user.or.client.group")
plot_target_user_counts(df_wide, "Main.target.user.or.client.group")
}
